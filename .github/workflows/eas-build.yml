name: EAS Build

on:
  workflow_dispatch:
    inputs:
      profile:
        description: 'Choose EAS build profile (preview, development, production)'
        required: true
        default: 'preview'
        type: string
      type:
        description: 'Choose output type (apk or aab)'
        required: true
        default: 'apk'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout
      - name: Checkout Repo
        uses: actions/checkout@v4

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # 3. Install dependencies
      - name: Install Dependencies
        run: npm ci --fetch-retries=5 --fetch-retry-factor=2 --fetch-retry-maxtimeout=60000

      # 4. Install EAS CLI
      - name: Install EAS CLI
        run: npm install -g eas-cli jq

      # 5. Run EAS Build (android only here)
      - name: Run EAS Build
        env:
          EXPO_TOKEN: ${{ secrets.EAS_TOKEN }}
        run: eas build --platform android --profile ${{ github.event.inputs.profile }} --non-interactive

      # 6. Get latest build URL
      - name: Get Build URL
        id: build_url
        env:
          EXPO_TOKEN: ${{ secrets.EAS_TOKEN }}
        run: |
          url=$(eas build:list --status finished --platform android --limit 1 --json | jq -r '.[0].artifacts.buildUrl')
          echo "url=$url" >> $GITHUB_OUTPUT

      # 7. Download artifact (.apk or .aab)
      - name: Download Artifact
        run: |
          curl -L "${{ steps.build_url.outputs.url }}" -o "app.${{ github.event.inputs.type }}"

      # 8. Upload to GitHub Actions
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: eas-android-build
          path: app.${{ github.event.inputs.type }}
